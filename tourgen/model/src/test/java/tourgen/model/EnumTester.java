package tourgen.model;

import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class EnumTester {

	@Test
	public void testOperationResultEnum() {
	  superficialEnumCodeCoverage(OperationResultEnum.class);
	}
	
	@Test
	public void testStageTypeEnum() {
	  superficialEnumCodeCoverage(StageType.class);
	}
	
	@Test
	public void testTournamentParticipantsEnum() {
	  superficialEnumCodeCoverage(TournamentParticipants.class);
	}

	/**
	 * This method is to get rid of the excess bytecode generated by the
	 * enum class which leads to eclEmma coverage errors on the package line
	 * @param enumClass
	 */
	public static void superficialEnumCodeCoverage(Class<? extends Enum<?>> enumClass) {
	   try {
	      for (Object o : (Object[])enumClass.getMethod("values").invoke(null)) {
	        enumClass.getMethod("valueOf", String.class).invoke(null, o.toString());
	      }
	   } catch (Throwable e) {
	         throw new RuntimeException(e);
	       }
	    
	  }
	//Javadoc https://stackoverflow.com/questions/4512358/emma-coverage-on-enum-types

}
